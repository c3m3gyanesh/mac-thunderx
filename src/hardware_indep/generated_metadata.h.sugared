
# TODO put it into a common library
def get_field_type(field_name, field_length):
    """Returns textually the C type generated for the field."""
    if (field_length > 32):
        # for now, we suppose that anything longer than 4 bytes
        # is stored as an array
        return "unsigned char*"
    else:
        # note: shorter fields would have shorter representations
        return "void*"



#[ #ifndef __GENERATED_METADATA_H_
#[ #define __GENERATED_METADATA_H_
#[ 

list_names = []

for (list_name, field_list) in hlir.p4_field_lists.items():
    list_names.append(list_name)

    #[ struct fieldlist_${list_name}_t
    #[ {
    for field in field_list.fields:
        if (field.instance.name.startswith("standard_metadata")):
            #[     // field ${field.name} is in standard metadata
            continue

        # TODO set it properly
        field_type = get_field_type(field.instance.name, field.width)

        #[     ${field_type} ${field.instance.name}_${field.name};
    #[ };
    #[ 



#[ 
#[ union any_fieldlist_t
#[ {
for list_name in list_names:
    #[     struct fieldlist_${list_name}_t fieldlist_${list_name};
#[ };
#[ 
#[ #endif
